alias addGoPath="export GOPATH=\$GOPATH:\`pwd\`"

alias razerSet="razercfg --setled Scrollwheel:off ; razercfg --setled GlowingLogo:off ; razercfg --res 1:3"

alias gstyle='git diff master --name-only | grep -v "chrome/common/extensions/extension_messages.h" | sed '"'"'s/^/"/'"'"' | sed '"'"'s/$/"/'"'"' | xargs 2>&1 >/dev/null cpplint.py --filter=-build/include_what_you_use | grep -v -e "^Done processing" -e "^Ignoring"'

# "VIM No O"
alias vimno="vim -O1"
# Readonly
alias vimr="vim -R"
# Always open multiple files in multiple windows.
alias vim="vim -O"

alias myip="wget -qO - http://cfaj.freeshell.org/ipaddr.cgi"

alias valgrindfull="valgrind --leak-check=full --show-reachable=yes --track-origins=yes"

alias quit="exit"

# Java stuff
# no assertions
alias javanoa="java -da"
# assertions (default)
alias javaa="java -ea"
alias java="java -ea"
alias javaXmem="java -Xmx8G -Xms8G"

alias work="cd $WORKINGDIR"
alias sw="setWork"

alias utf8ToAscii='iconv -c -f utf-8 -t ascii'

alias rmsvn="find . -name .svn -print0 | xargs -0 rm -rf"

alias wbq="work; back; quit;"

alias clear="clear;clear"

alias noSleep="xset s off; xset -dpms"

function gogoClang
{
  tools/clang/scripts/update.sh
  rm -Rf out/Debug && mkdir out/Debug
  GYP_DEFINES=$GYP_DEFINES" clang=1" ./build/gyp_chromium
}

function mountIso
{
   sudo umount -df /media/iso
   sudo mount -o loop $1 /media/iso
}

function webPermissions
{
   temp=`pwd`
   if [ $# -ne 0 ];
   then
      temp=$1
   fi

   find $temp -type d | xargs chmod 775
   find $temp -type f | xargs chmod 664
}

function setWork
{
   temp=`pwd`
   if [ $# -ne 0 ];
   then
      temp=$1
   fi

   WORKINGDIR=$temp
   echo $WORKINGDIR
   echo $WORKINGDIR > $HOME/._workingDirectoryConfig
}

# Clean a directory of all latex compilation artifacts.
alias cleanLatex='rm *.aux *.bbl *.blg *.dvi *.log *.pdf *.ps'

function fulllatexNoFail
{
   latex $1.tex
   latex $1.tex
   bibtex $1.aux
   latex $1.tex
   latex $1.tex
   makeindex $1.glo -s $1.ist -t $1.glg -o $1.gls
   latex $1.tex
   dvips -P pdf -t letter -o $1.ps $1.dvi
   ps2pdf -dCompatibilityLevel=1.4 -dPDFSETTINGS=/prepress $1.ps $1.pdf
}

function fulllatex
{
   latex $1.tex && \
   latex $1.tex && \
   bibtex $1.aux && \
   latex $1.tex && \
   latex $1.tex && \
   makeindex $1.glo -s $1.ist -t $1.glg -o $1.gls && \
   latex $1.tex && \
   dvips -P pdf -t letter -o $1.ps $1.dvi && \
   ps2pdf -dCompatibilityLevel=1.4 -dPDFSETTINGS=/prepress $1.ps $1.pdf
}

function mkcd
{
   mkdir $1;
   cd $1;
}

function back
{
   stringZ=`id`

   nameStart=`expr index "$stringZ" "[(]"`

   nameEnd=`expr index "$stringZ" "[)]"`

   userName=${stringZ:$nameStart:($nameEnd - $nameStart - 1)}

   backDir=`pwd`

   backDir=`basename $backDir`

   backPath="/home/$userName/back/$backDir"

   rm -Rf "$backPath"
   mkdir "$backPath"
   cp -R * "$backPath"
}

function setTime
{
   sudo ln -sf /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
   sudo ntpd -qg
   sudo hwclock -w
}

function gitTraces {
  git diff master --name-only -z | xargs -0 grep eriq
  git diff master --name-only -z | xargs -0 grep '//TEST'
}

function topContributers
{
   if [ $# -lt 1 -o $# -gt 2 ]; then
      echo "USAGE: topContributors <file> [max number of contributors]";
      return;
   fi

   numToShow=5
   if [ $# -eq 2 ]; then
      numToShow=$2
   fi

   file=$1

   git blame -c $file | sed 's/^\S\{1,\}\s(\(\S\{1,\}\)\s\{1,\}20.*$/\1/' | sort | uniq -c | sort -bgr | head -n $numToShow
}
